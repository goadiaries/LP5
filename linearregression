# Import necessary libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Read the dataset
df = pd.read_csv("HousingData.csv")
df.head()

# Info. about dataset
df.info()

# Data Cleaning
df.isnull().sum()
df["CRIM"].fillna(df["CRIM"].mean(), inplace=True) # fill CRIM with mean value
df["ZN"].fillna(0, inplace=True) # fill ZN with mode value, because 360 of the entries are 0
df["INDUS"].fillna(df["INDUS"].mean(), inplace=True) # fill INDUS with mean value
df["CHAS"].fillna(0, inplace=True) # fill CHAS with mode value, bec\ause 452 of the entries are 0
df["AGE"].fillna(df["AGE"].mean(), inplace=True) # fill AGE with mean value
df["LSTAT"].fillna(df["LSTAT"].mean(), inplace=True) # fill LSTAT with mean value

df.isnull().sum()

X = df.drop('MEDV',axis=1)
y = df['MEDV']


from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X,y, random_state = 42)

lr = LinearRegression()
lr.fit(X_train, y_train)

y_pred = lr.predict(X_test)

lr.score(X_test,y_test)

import tensorflow as tf

model = tf.keras.Sequential([
    tf.keras.layers.Dense(13,  activation='relu'),
    tf.keras.layers.Dense(16, activation = 'relu'),
    tf.keras.layers.Dense(32, activation = 'relu'),
    tf.keras.layers.Dense(16, activation = 'relu'),
    tf.keras.layers.Dense(1, activation='linear')
])

model.compile(optimizer='adam',loss = tf.keras.losses.MeanSquaredError())

model.fit(X_train,y_train,epochs=50)

model.evaluate(X_test, y_test)
